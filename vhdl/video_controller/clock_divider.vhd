-- File: ../vhdl/video_controller/clock_divider.vhd
-- Generated by MyHDL 0.11
-- Date: Wed Jan  5 13:25:38 2022


library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;
use std.textio.all;

use work.pck_myhdl_011.all;

entity clock_divider is
    port (
        clk_in: in std_logic;
        clk_out: out std_logic
    );
end entity clock_divider;


architecture MyHDL of clock_divider is



signal counter: unsigned(24 downto 0);

begin





clk_out <= counter((25 - 1));

CLOCK_DIVIDER_UPDATE_COUNTER: process (clk_in) is
begin
    if rising_edge(clk_in) then
        if (signed(resize(counter, 26)) < (33554432 - 1)) then
            counter <= (counter + 1);
        else
            counter <= to_unsigned(0, 25);
        end if;
    end if;
end process CLOCK_DIVIDER_UPDATE_COUNTER;

end architecture MyHDL;
