-- File: ../vhdl/neural_network/neural_memory.vhd
-- Generated by MyHDL 0.11
-- Date: Sun Jan  9 19:00:03 2022


library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;
use std.textio.all;

use work.pck_myhdl_011.all;

entity neural_memory is
    port (
        clk: in std_logic;
        we: in std_logic;
        write_address: in std_logic_vector(10 downto 0);
        read_address: in std_logic_vector(10 downto 0);
        din: in std_logic_vector(31 downto 0);
        dout: out std_logic_vector(31 downto 0)
    );
end entity neural_memory;


architecture MyHDL of neural_memory is



signal din_num: unsigned(31 downto 0);
signal dout_num: unsigned(31 downto 0);
signal read_address_num: unsigned(10 downto 0);
signal write_address_num: unsigned(10 downto 0);
type t_array_memory is array(0 to 2000-1) of unsigned(31 downto 0);
signal memory: t_array_memory;

begin

write_address_num <= unsigned(write_address);
read_address_num <= unsigned(read_address);
din_num <= unsigned(din);
dout <= std_logic_vector(dout_num);



NEURAL_MEMORY_INPUT_LOGIC: process (clk) is
begin
    if rising_edge(clk) then
        if (we = '1') then
            memory(to_integer(write_address_num)) <= din_num;
        else
            dout_num <= memory(to_integer(read_address_num));
        end if;
    end if;
end process NEURAL_MEMORY_INPUT_LOGIC;

end architecture MyHDL;
