-- File: vhdl_out/mclk_clock_divider.vhd
-- Generated by MyHDL 0.11
-- Date: Wed Jan 26 11:00:44 2022


library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;
use std.textio.all;

use work.pck_myhdl_011.all;

entity mclk_clock_divider is
    port (
        clk: in std_logic;
        en: in std_logic;
        clk_out: out std_logic
    );
end entity mclk_clock_divider;


architecture MyHDL of mclk_clock_divider is



signal clk_out_sig: std_logic;
signal counter: unsigned(1 downto 0);

begin





clk_out <= clk_out_sig;

MCLK_CLOCK_DIVIDER_UPDATE_OUTPUT: process (clk) is
begin
    if rising_edge(clk) then
        if (counter = 1) then
            if (en = '1') then
                clk_out_sig <= stdl((not bool(clk_out_sig)));
            else
                clk_out_sig <= '0';
            end if;
        end if;
    end if;
end process MCLK_CLOCK_DIVIDER_UPDATE_OUTPUT;

MCLK_CLOCK_DIVIDER_CNT_UPDATE: process (clk) is
begin
    if rising_edge(clk) then
        if (en = '1') then
            if (counter < 1) then
                counter <= (counter + 1);
            else
                counter <= to_unsigned(0, 2);
            end if;
        else
            counter <= to_unsigned(0, 2);
        end if;
    end if;
end process MCLK_CLOCK_DIVIDER_CNT_UPDATE;

end architecture MyHDL;
